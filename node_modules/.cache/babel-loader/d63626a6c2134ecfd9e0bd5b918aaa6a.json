{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\tracker\\\\tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Board from './components/Board';\nimport Turn from './components/Turn';\nimport Game from './components/Game';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [blueTurn, changeTurn] = useState(true);\n  const [gameOver, endGame] = useState(false);\n  const [squares, setSquares] = useState([{\n    row: 0,\n    column: 0,\n    id: \"gray\"\n  }, {\n    row: 0,\n    column: 1,\n    id: \"gray\"\n  }, {\n    row: 0,\n    column: 2,\n    id: \"gray\"\n  }, {\n    row: 0,\n    column: 3,\n    id: \"gray\"\n  }, {\n    row: 0,\n    column: 4,\n    id: \"gray\"\n  }, {\n    row: 0,\n    column: 5,\n    id: \"gray\"\n  }, {\n    row: 0,\n    column: 6,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 0,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 1,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 2,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 3,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 4,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 5,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 6,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 0,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 1,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 2,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 3,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 4,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 5,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 6,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 0,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 1,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 2,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 3,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 4,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 5,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 6,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 0,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 1,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 2,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 3,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 4,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 5,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 6,\n    id: \"gray\"\n  }]);\n\n  const addTile = (column, turn) => {\n    var i;\n    var added = false;\n    var newSquare = [];\n    var id = \"red\";\n    var nRow;\n\n    if (turn) {\n      id = \"blue\";\n    }\n\n    if (!gameOver) {\n      for (i = squares.length - 1; i >= 0; i--) {\n        if (added) {\n          newSquare.unshift(squares[i]);\n        } else if (squares[i].id === \"gray\" && squares[i].column === column) {\n          nRow = squares[i].row;\n          newSquare.unshift({\n            row: nRow,\n            column: column,\n            id: id\n          });\n          added = true;\n        } else {\n          newSquare.unshift(squares[i]);\n        }\n      }\n    }\n\n    setSquares(newSquare);\n\n    if (added) {\n      // check game state\n      if (vertWin(column, id) || horWin(nRow, id)) {\n        endGame(true);\n      }\n\n      changeTurn(!blueTurn);\n    }\n\n    console.log(gameOver);\n  };\n\n  const vertWin = (column, id) => {\n    //\t\tconsole.log(\"v\");\n    var i;\n    var count = 0;\n\n    for (i = column; i < 35; i += 7) {\n      //\t\t\tconsole.log(i);\n      if (squares[i].id === id) {\n        count += 1;\n\n        if (count >= 4) {\n          return true;\n        }\n      } else {\n        count = 0;\n      }\n    }\n\n    return false;\n  };\n\n  const horWin = (row, id) => {\n    //\t\tconsole.log(\"h\");\n    var i;\n    var count = 0;\n\n    for (i = row * 7; i < 35; i++) {\n      if (squares[i].id === id) {\n        count += 1;\n\n        if (count >= 4) {\n          return true;\n        }\n      } else {\n        count = 0;\n      }\n    }\n\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      squares: squares,\n      blueTurn: blueTurn,\n      onAdd: addTile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Turn, {\n      blueTurn: blueTurn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Game, {\n      gameOver: gameOver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"BfcjrdBOu8pQEiIjuCRutpqSudU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Desktop/tracker/tracker/src/App.js"],"names":["Board","Turn","Game","useState","App","blueTurn","changeTurn","gameOver","endGame","squares","setSquares","row","column","id","addTile","turn","i","added","newSquare","nRow","length","unshift","vertWin","horWin","console","log","count"],"mappings":"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","sourcesContent":["import Board from './components/Board'\nimport Turn from './components/Turn'\nimport Game from './components/Game'\nimport { useState } from 'react'\n\nfunction App() {\n\tconst [blueTurn, changeTurn] = useState(true)\n\tconst [gameOver, endGame] = useState(false)\n\t\n\tconst [squares, setSquares] = useState([\n\t{\n\t\trow: 0,\n\t\tcolumn: 0,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 0,\n\t\tcolumn: 1,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 0,\n\t\tcolumn: 2,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 0,\n\t\tcolumn: 3,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 0,\n\t\tcolumn: 4,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 0,\n\t\tcolumn: 5,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 0,\n\t\tcolumn: 6,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 1,\n\t\tcolumn: 0,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 1,\n\t\tcolumn: 1,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 1,\n\t\tcolumn: 2,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 1,\n\t\tcolumn: 3,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 1,\n\t\tcolumn: 4,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 1,\n\t\tcolumn: 5,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 1,\n\t\tcolumn: 6,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 2,\n\t\tcolumn: 0,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 2,\n\t\tcolumn: 1,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 2,\n\t\tcolumn: 2,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 2,\n\t\tcolumn: 3,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 2,\n\t\tcolumn: 4,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 2,\n\t\tcolumn: 5,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 2,\n\t\tcolumn: 6,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 3,\n\t\tcolumn: 0,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 3,\n\t\tcolumn: 1,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 3,\n\t\tcolumn: 2,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 3,\n\t\tcolumn: 3,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 3,\n\t\tcolumn: 4,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 3,\n\t\tcolumn: 5,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 3,\n\t\tcolumn: 6,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 4,\n\t\tcolumn: 0,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 4,\n\t\tcolumn: 1,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 4,\n\t\tcolumn: 2,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 4,\n\t\tcolumn: 3,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 4,\n\t\tcolumn: 4,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 4,\n\t\tcolumn: 5,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 4,\n\t\tcolumn: 6,\n\t\tid: \"gray\",\n\t},\n\t])\n\t\n\tconst addTile = (column, turn) => {\n\t\tvar i;\n\t\tvar added = false;\n\t\tvar newSquare = [];\n\t\tvar id = \"red\";\n\t\tvar nRow;\n\t\tif (turn){id = \"blue\";}\n\t\tif (!gameOver){\n\t\t\tfor (i = squares.length-1; i >= 0; i--){\n\t\t\t\tif (added){\n\t\t\t\t\tnewSquare.unshift(squares[i]);\n\t\t\t\t} else if (squares[i].id === \"gray\" && squares[i].column === column){\n\t\t\t\t\tnRow = squares[i].row;\n\t\t\t\t\tnewSquare.unshift({row: nRow, column: column, id: id});\n\t\t\t\t\tadded = true;\n\t\t\t\t} else {\n\t\t\t\t\tnewSquare.unshift(squares[i]);\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t}\n\t\tsetSquares(newSquare);\n\t\tif (added){\n\t\t// check game state\n\t\tif (vertWin(column, id) || horWin(nRow, id)){\n\t\t\t\tendGame(true);\n\t\t}\n\t\t\tchangeTurn(!blueTurn);\n\t\t}\n\t\tconsole.log(gameOver);\n\t}\n\t\n\tconst vertWin = (column, id) => {\n//\t\tconsole.log(\"v\");\n\t\tvar i;\n\t\tvar count = 0;\n\t\tfor (i = column; i < 35; i+=7 ){\n//\t\t\tconsole.log(i);\n\t\t\tif (squares[i].id === id){\n\t\t\t\tcount += 1;\n\t\t\t\tif (count >= 4){return true;}\n\t\t\t} else {\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\t\n\tconst horWin = (row, id) => {\n//\t\tconsole.log(\"h\");\n\t\tvar i;\n\t\tvar count = 0;\n\t\tfor (i = row*7; i < 35; i++ ){\n\t\t\tif (squares[i].id === id){\n\t\t\t\tcount += 1;\n\t\t\t\tif (count >= 4){return true;}\n\t\t\t} else {\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Board squares = {squares} blueTurn = {blueTurn} onAdd = {addTile}/>\n\t\t\t<Turn blueTurn = {blueTurn}/>\n\t\t\t<Game gameOver = {gameOver}/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n "]},"metadata":{},"sourceType":"module"}