{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\battleship\\\\connect4\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Board from './components/Board';\nimport Turn from './components/Turn';\nimport New from './components/New';\nimport Header from './components/Header';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [blueTurn, changeTurn] = useState(true);\n  const [gameOver, endGame] = useState(false);\n  const [moveCount, stepUp] = useState(0);\n  const startState = [{\n    row: 0,\n    column: 0,\n    id: \"gray\"\n  }, {\n    row: 0,\n    column: 1,\n    id: \"gray\"\n  }, {\n    row: 0,\n    column: 2,\n    id: \"gray\"\n  }, {\n    row: 0,\n    column: 3,\n    id: \"gray\"\n  }, {\n    row: 0,\n    column: 4,\n    id: \"gray\"\n  }, {\n    row: 0,\n    column: 5,\n    id: \"gray\"\n  }, {\n    row: 0,\n    column: 6,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 0,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 1,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 2,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 3,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 4,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 5,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 6,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 0,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 1,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 2,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 3,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 4,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 5,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 6,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 0,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 1,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 2,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 3,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 4,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 5,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 6,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 0,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 1,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 2,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 3,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 4,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 5,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 6,\n    id: \"gray\"\n  }];\n  const [squares, setSquares] = useState(startState);\n\n  const newGame = () => {\n    setSquares(startState);\n    stepUp(0);\n    endGame(false);\n    changeTurn(true);\n  };\n\n  const addTile = (column, turn) => {\n    var i;\n    var added = false;\n    var newSquare = [];\n    var id = \"red\";\n    var nRow;\n\n    if (turn) {\n      id = \"blue\";\n    }\n\n    if (moveCount < 35) {\n      for (i = squares.length - 1; i >= 0; i--) {\n        if (added) {\n          newSquare.unshift(squares[i]);\n        } else if (squares[i].id === \"gray\" && squares[i].column === column) {\n          nRow = squares[i].row;\n          newSquare.unshift({\n            row: nRow,\n            column: column,\n            id: id\n          });\n          added = true;\n        } else {\n          newSquare.unshift(squares[i]);\n        }\n      }\n\n      setSquares(newSquare);\n    }\n\n    if (added) {\n      changeTurn(!blueTurn);\n      stepUp(prevState => prevState + 1);\n    }\n  };\n\n  useEffect(() => {\n    const horWin = id => {\n      var i;\n      var count = 0;\n\n      for (i = 0; i < 35; i++) {\n        if (i % 7 === 0) {\n          count = 0;\n        }\n\n        if (squares[i].id === id) {\n          count += 1;\n\n          if (count >= 4) {\n            return true;\n          }\n        } else {\n          count = 0;\n        }\n      }\n\n      return false;\n    };\n\n    const vertWin = id => {\n      var i;\n      var j;\n      var count;\n\n      for (i = 0; i < 7; i++) {\n        count = 0;\n\n        for (j = 0; j < 29; j += 7) {\n          if (squares[i + j].id === id) {\n            count += 1;\n\n            if (count >= 4) {\n              return true;\n            }\n          } else {\n            count = 0;\n          }\n        }\n      }\n\n      return false;\n    };\n\n    const aiguWin = id => {\n      var i;\n      var j;\n      var count;\n\n      for (i = 4; i < 7; i++) {\n        count = 0;\n\n        for (j = 0; j < 25; j += 6) {\n          if (squares[i + j].id === id) {\n            count += 1;\n\n            if (count >= 4) {\n              return true;\n            }\n          } else {\n            count = 0;\n          }\n        }\n      }\n\n      for (i = 3; i < 14; i += 10) {\n        count = 0;\n\n        for (j = 0; j < 19; j += 6) {\n          if (squares[i + j].id === id) {\n            count += 1;\n\n            if (count >= 4) {\n              return true;\n            }\n          } else {\n            count = 0;\n          }\n        }\n      }\n\n      return false;\n    };\n\n    const graveWin = id => {\n      var i;\n      var j;\n      var count;\n      console.log(id);\n\n      for (i = 0; i < 3; i++) {\n        count = 0;\n\n        for (j = 0; j < 33; j += 8) {\n          if (squares[i + j].id === id) {\n            count += 1;\n\n            if (count >= 4) {\n              return true;\n            }\n          } else {\n            count = 0;\n          }\n        }\n      }\n\n      for (i = 3; i < 8; i += 4) {\n        count = 0;\n\n        for (j = 0; j < 25; j += 8) {\n          if (squares[i + j].id === id) {\n            count += 1;\n\n            if (count >= 4) {\n              return true;\n            }\n          } else {\n            count = 0;\n          }\n        }\n      }\n\n      return false;\n    };\n\n    if (vertWin(\"blue\") || horWin(\"blue\") || aiguWin(\"blue\") || graveWin(\"blue\")) {\n      endGame(true);\n    } else if (vertWin(\"red\") || horWin(\"red\") || aiguWin(\"red\") || graveWin(\"red\")) {\n      endGame(true);\n    }\n  }, [squares]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      squares: squares,\n      blueTurn: blueTurn,\n      onAdd: addTile,\n      gameOver: gameOver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Turn, {\n      blueTurn: blueTurn,\n      gameOver: gameOver,\n      moveCount: moveCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(New, {\n      gameOver: gameOver,\n      moveCount: moveCount,\n      newGame: newGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"Xv305Cqi5m2M66jxoXIFhc5G20Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Desktop/battleship/connect4/src/App.js"],"names":["Board","Turn","New","Header","useState","useEffect","App","blueTurn","changeTurn","gameOver","endGame","moveCount","stepUp","startState","row","column","id","squares","setSquares","newGame","addTile","turn","i","added","newSquare","nRow","length","unshift","prevState","horWin","count","vertWin","j","aiguWin","graveWin","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBJ,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAACK,QAAD,EAAWC,OAAX,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACO,SAAD,EAAYC,MAAZ,IAAsBR,QAAQ,CAAC,CAAD,CAApC;AAEA,QAAMS,UAAU,GAAG,CACnB;AACCC,IAAAA,GAAG,EAAE,CADN;AAECC,IAAAA,MAAM,EAAE,CAFT;AAGCC,IAAAA,EAAE,EAAE;AAHL,GADmB,EAKjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GALiB,EASjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GATiB,EAajB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GAbiB,EAiBjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GAjBiB,EAqBjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GArBiB,EAyBjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GAzBiB,EA6BjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GA7BiB,EAiCjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GAjCiB,EAqCjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GArCiB,EAyCjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GAzCiB,EA6CjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GA7CiB,EAiDjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GAjDiB,EAqDjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GArDiB,EAyDjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GAzDiB,EA6DjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GA7DiB,EAiEjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GAjEiB,EAqEjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GArEiB,EAyEjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GAzEiB,EA6EjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GA7EiB,EAiFjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GAjFiB,EAqFjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GArFiB,EAyFjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GAzFiB,EA6FjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GA7FiB,EAiGjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GAjGiB,EAqGjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GArGiB,EAyGjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GAzGiB,EA6GjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GA7GiB,EAiHjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GAjHiB,EAqHjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GArHiB,EAyHjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GAzHiB,EA6HjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GA7HiB,EAiIjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GAjIiB,EAqIjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GArIiB,EAyIjB;AACDF,IAAAA,GAAG,EAAE,CADJ;AAEDC,IAAAA,MAAM,EAAE,CAFP;AAGDC,IAAAA,EAAE,EAAE;AAHH,GAzIiB,CAAnB;AAgJA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAACS,UAAD,CAAtC;;AAEA,QAAMM,OAAO,GAAG,MAAM;AACrBD,IAAAA,UAAU,CAACL,UAAD,CAAV;AACAD,IAAAA,MAAM,CAAC,CAAD,CAAN;AACAF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,GALD;;AAOA,QAAMY,OAAO,GAAG,CAACL,MAAD,EAASM,IAAT,KAAkB;AACjC,QAAIC,CAAJ;AACA,QAAIC,KAAK,GAAG,KAAZ;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIR,EAAE,GAAG,KAAT;AACA,QAAIS,IAAJ;;AACA,QAAIJ,IAAJ,EAAS;AAACL,MAAAA,EAAE,GAAG,MAAL;AAAa;;AACvB,QAAIL,SAAS,GAAG,EAAhB,EAAmB;AAClB,WAAKW,CAAC,GAAGL,OAAO,CAACS,MAAR,GAAe,CAAxB,EAA2BJ,CAAC,IAAI,CAAhC,EAAmCA,CAAC,EAApC,EAAuC;AACtC,YAAIC,KAAJ,EAAU;AACTC,UAAAA,SAAS,CAACG,OAAV,CAAkBV,OAAO,CAACK,CAAD,CAAzB;AACA,SAFD,MAEO,IAAIL,OAAO,CAACK,CAAD,CAAP,CAAWN,EAAX,KAAkB,MAAlB,IAA4BC,OAAO,CAACK,CAAD,CAAP,CAAWP,MAAX,KAAsBA,MAAtD,EAA6D;AACnEU,UAAAA,IAAI,GAAGR,OAAO,CAACK,CAAD,CAAP,CAAWR,GAAlB;AACAU,UAAAA,SAAS,CAACG,OAAV,CAAkB;AAACb,YAAAA,GAAG,EAAEW,IAAN;AAAYV,YAAAA,MAAM,EAAEA,MAApB;AAA4BC,YAAAA,EAAE,EAAEA;AAAhC,WAAlB;AACAO,UAAAA,KAAK,GAAG,IAAR;AACA,SAJM,MAIA;AACNC,UAAAA,SAAS,CAACG,OAAV,CAAkBV,OAAO,CAACK,CAAD,CAAzB;AACA;AACD;;AACDJ,MAAAA,UAAU,CAACM,SAAD,CAAV;AACA;;AACD,QAAID,KAAJ,EAAU;AACTf,MAAAA,UAAU,CAAC,CAACD,QAAF,CAAV;AACAK,MAAAA,MAAM,CAACgB,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAN;AACA;AACD,GAzBD;;AA2BAvB,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMwB,MAAM,GAAIb,EAAD,IAAQ;AACvB,UAAIM,CAAJ;AACA,UAAIQ,KAAK,GAAG,CAAZ;;AACA,WAAKR,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACxB,YAAIA,CAAC,GAAC,CAAF,KAAQ,CAAZ,EAAc;AAAEQ,UAAAA,KAAK,GAAG,CAAR;AAAW;;AAC3B,YAAIb,OAAO,CAACK,CAAD,CAAP,CAAWN,EAAX,KAAkBA,EAAtB,EAAyB;AACxBc,UAAAA,KAAK,IAAI,CAAT;;AACA,cAAIA,KAAK,IAAI,CAAb,EAAe;AAAC,mBAAO,IAAP;AAAa;AAC7B,SAHD,MAGO;AACNA,UAAAA,KAAK,GAAG,CAAR;AACA;AACD;;AACD,aAAO,KAAP;AACA,KAbA;;AAeD,UAAMC,OAAO,GAAIf,EAAD,IAAQ;AACvB,UAAIM,CAAJ;AACA,UAAIU,CAAJ;AACA,UAAIF,KAAJ;;AACA,WAAKR,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EAAuB;AACtBQ,QAAAA,KAAK,GAAG,CAAR;;AACA,aAAKE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,IAAE,CAAvB,EAAyB;AACxB,cAAIf,OAAO,CAACK,CAAC,GAACU,CAAH,CAAP,CAAahB,EAAb,KAAoBA,EAAxB,EAA2B;AAC1Bc,YAAAA,KAAK,IAAI,CAAT;;AACD,gBAAIA,KAAK,IAAI,CAAb,EAAe;AAAC,qBAAO,IAAP;AAAa;AAC5B,WAHD,MAGO;AACNA,YAAAA,KAAK,GAAG,CAAR;AACA;AACD;AACD;;AACD,aAAO,KAAP;AACA,KAhBD;;AAkBA,UAAMG,OAAO,GAAIjB,EAAD,IAAQ;AACvB,UAAIM,CAAJ;AACA,UAAIU,CAAJ;AACA,UAAIF,KAAJ;;AACA,WAAKR,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EAAuB;AACtBQ,QAAAA,KAAK,GAAG,CAAR;;AACA,aAAKE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,IAAE,CAAvB,EAAyB;AACxB,cAAIf,OAAO,CAACK,CAAC,GAACU,CAAH,CAAP,CAAahB,EAAb,KAAoBA,EAAxB,EAA2B;AAC1Bc,YAAAA,KAAK,IAAI,CAAT;;AACD,gBAAIA,KAAK,IAAI,CAAb,EAAe;AAAC,qBAAO,IAAP;AAAa;AAC5B,WAHD,MAGO;AACNA,YAAAA,KAAK,GAAG,CAAR;AACA;AACD;AACD;;AACD,WAAKR,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,IAAE,EAAvB,EAA0B;AACzBQ,QAAAA,KAAK,GAAG,CAAR;;AACA,aAAKE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,IAAE,CAAvB,EAAyB;AACxB,cAAIf,OAAO,CAACK,CAAC,GAACU,CAAH,CAAP,CAAahB,EAAb,KAAoBA,EAAxB,EAA2B;AAC1Bc,YAAAA,KAAK,IAAI,CAAT;;AACD,gBAAIA,KAAK,IAAI,CAAb,EAAe;AAAC,qBAAO,IAAP;AAAa;AAC5B,WAHD,MAGO;AACNA,YAAAA,KAAK,GAAG,CAAR;AACA;AACD;AACD;;AACD,aAAO,KAAP;AACA,KA3BD;;AA6BA,UAAMI,QAAQ,GAAIlB,EAAD,IAAQ;AACxB,UAAIM,CAAJ;AACA,UAAIU,CAAJ;AACA,UAAIF,KAAJ;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYpB,EAAZ;;AACA,WAAKM,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,EAApB,EAAuB;AACtBQ,QAAAA,KAAK,GAAG,CAAR;;AACA,aAAKE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,IAAE,CAAvB,EAAyB;AACxB,cAAIf,OAAO,CAACK,CAAC,GAACU,CAAH,CAAP,CAAahB,EAAb,KAAoBA,EAAxB,EAA2B;AAC1Bc,YAAAA,KAAK,IAAI,CAAT;;AACD,gBAAIA,KAAK,IAAI,CAAb,EAAe;AAAC,qBAAO,IAAP;AAAa;AAC5B,WAHD,MAGO;AACNA,YAAAA,KAAK,GAAG,CAAR;AACA;AACD;AACD;;AACD,WAAKR,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,IAAE,CAAtB,EAAwB;AACvBQ,QAAAA,KAAK,GAAG,CAAR;;AACA,aAAKE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,IAAE,CAAvB,EAAyB;AACxB,cAAIf,OAAO,CAACK,CAAC,GAACU,CAAH,CAAP,CAAahB,EAAb,KAAoBA,EAAxB,EAA2B;AAC1Bc,YAAAA,KAAK,IAAI,CAAT;;AACD,gBAAIA,KAAK,IAAI,CAAb,EAAe;AAAC,qBAAO,IAAP;AAAa;AAC5B,WAHD,MAGO;AACNA,YAAAA,KAAK,GAAG,CAAR;AACA;AACD;AACD;;AACD,aAAO,KAAP;AACA,KA5BD;;AA6BC,QAAIC,OAAO,CAAC,MAAD,CAAP,IAAmBF,MAAM,CAAC,MAAD,CAAzB,IAAqCI,OAAO,CAAC,MAAD,CAA5C,IAAwDC,QAAQ,CAAC,MAAD,CAApE,EAA6E;AAC5ExB,MAAAA,OAAO,CAAC,IAAD,CAAP;AACA,KAFD,MAEO,IAAIqB,OAAO,CAAC,KAAD,CAAP,IAAkBF,MAAM,CAAC,KAAD,CAAxB,IAAmCI,OAAO,CAAC,KAAD,CAA1C,IAAqDC,QAAQ,CAAC,KAAD,CAAjE,EAAyE;AAC/ExB,MAAAA,OAAO,CAAC,IAAD,CAAP;AACA;AACD,GAjGQ,EAiGN,CAACO,OAAD,CAjGM,CAAT;AAqGA,sBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,KAAD;AAAO,MAAA,OAAO,EAAIA,OAAlB;AAA2B,MAAA,QAAQ,EAAIV,QAAvC;AAAiD,MAAA,KAAK,EAAIa,OAA1D;AAAmE,MAAA,QAAQ,EAAEX;AAA7E;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAIF,QAAlB;AAA4B,MAAA,QAAQ,EAAIE,QAAxC;AAAkD,MAAA,SAAS,EAAEE;AAA7D;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC,QAAC,GAAD;AAAK,MAAA,QAAQ,EAAIF,QAAjB;AAA2B,MAAA,SAAS,EAAEE,SAAtC;AAAiD,MAAA,OAAO,EAAEQ;AAA1D;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAQA;;GAtSQb,G;;KAAAA,G;AAwST,eAAeA,GAAf","sourcesContent":["import Board from './components/Board'\r\nimport Turn from './components/Turn'\r\nimport New from './components/New'\r\nimport Header from './components/Header'\r\nimport { useState, useEffect } from 'react'\r\n\r\nfunction App() {\r\n\tconst [blueTurn, changeTurn] = useState(true)\r\n\tconst [gameOver, endGame] = useState(false)\r\n\tconst [moveCount, stepUp] = useState(0)\r\n\t\r\n\tconst startState = [\r\n\t{\r\n\t\trow: 0,\r\n\t\tcolumn: 0,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 0,\r\n\t\tcolumn: 1,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 0,\r\n\t\tcolumn: 2,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 0,\r\n\t\tcolumn: 3,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 0,\r\n\t\tcolumn: 4,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 0,\r\n\t\tcolumn: 5,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 0,\r\n\t\tcolumn: 6,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 1,\r\n\t\tcolumn: 0,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 1,\r\n\t\tcolumn: 1,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 1,\r\n\t\tcolumn: 2,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 1,\r\n\t\tcolumn: 3,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 1,\r\n\t\tcolumn: 4,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 1,\r\n\t\tcolumn: 5,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 1,\r\n\t\tcolumn: 6,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 2,\r\n\t\tcolumn: 0,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 2,\r\n\t\tcolumn: 1,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 2,\r\n\t\tcolumn: 2,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 2,\r\n\t\tcolumn: 3,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 2,\r\n\t\tcolumn: 4,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 2,\r\n\t\tcolumn: 5,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 2,\r\n\t\tcolumn: 6,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 3,\r\n\t\tcolumn: 0,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 3,\r\n\t\tcolumn: 1,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 3,\r\n\t\tcolumn: 2,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 3,\r\n\t\tcolumn: 3,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 3,\r\n\t\tcolumn: 4,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 3,\r\n\t\tcolumn: 5,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 3,\r\n\t\tcolumn: 6,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 4,\r\n\t\tcolumn: 0,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 4,\r\n\t\tcolumn: 1,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 4,\r\n\t\tcolumn: 2,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 4,\r\n\t\tcolumn: 3,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 4,\r\n\t\tcolumn: 4,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 4,\r\n\t\tcolumn: 5,\r\n\t\tid: \"gray\",\r\n\t},{\r\n\t\trow: 4,\r\n\t\tcolumn: 6,\r\n\t\tid: \"gray\",\r\n\t},\r\n\t]\r\n\t\r\n\tconst [squares, setSquares] = useState(startState)\r\n\t\r\n\tconst newGame = () => {\r\n\t\tsetSquares(startState);\r\n\t\tstepUp(0);\r\n\t\tendGame(false);\r\n\t\tchangeTurn(true);\r\n\t}\r\n\t\r\n\tconst addTile = (column, turn) => {\r\n\t\tvar i;\r\n\t\tvar added = false;\r\n\t\tvar newSquare = [];\r\n\t\tvar id = \"red\";\r\n\t\tvar nRow;\r\n\t\tif (turn){id = \"blue\";}\r\n\t\tif (moveCount < 35){\r\n\t\t\tfor (i = squares.length-1; i >= 0; i--){\r\n\t\t\t\tif (added){\r\n\t\t\t\t\tnewSquare.unshift(squares[i]);\r\n\t\t\t\t} else if (squares[i].id === \"gray\" && squares[i].column === column){\r\n\t\t\t\t\tnRow = squares[i].row;\r\n\t\t\t\t\tnewSquare.unshift({row: nRow, column: column, id: id});\r\n\t\t\t\t\tadded = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnewSquare.unshift(squares[i]);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\tsetSquares(newSquare);\r\n\t\t}\r\n\t\tif (added){\r\n\t\t\tchangeTurn(!blueTurn);\r\n\t\t\tstepUp(prevState => prevState + 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst horWin = (id) => {\r\n\t\tvar i;\r\n\t\tvar count = 0;\r\n\t\tfor (i = 0; i < 35; i++ ){\r\n\t\t\tif (i%7 === 0){ count = 0;}\r\n\t\t\tif (squares[i].id === id){\r\n\t\t\t\tcount += 1;\r\n\t\t\t\tif (count >= 4){return true;}\r\n\t\t\t} else {\r\n\t\t\t\tcount = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tconst vertWin = (id) => {\r\n\t\tvar i;\r\n\t\tvar j;\r\n\t\tvar count;\r\n\t\tfor (i = 0; i < 7; i++){\r\n\t\t\tcount = 0;\r\n\t\t\tfor (j = 0; j < 29; j+=7){\r\n\t\t\t\tif (squares[i+j].id === id){\r\n\t\t\t\t\tcount += 1;\r\n\t\t\t\tif (count >= 4){return true;}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcount = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tconst aiguWin = (id) => {\r\n\t\tvar i;\r\n\t\tvar j;\r\n\t\tvar count;\r\n\t\tfor (i = 4; i < 7; i++){\r\n\t\t\tcount = 0;\r\n\t\t\tfor (j = 0; j < 25; j+=6){\r\n\t\t\t\tif (squares[i+j].id === id){\r\n\t\t\t\t\tcount += 1;\r\n\t\t\t\tif (count >= 4){return true;}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcount = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (i = 3; i < 14; i+=10){\r\n\t\t\tcount = 0;\r\n\t\t\tfor (j = 0; j < 19; j+=6){\r\n\t\t\t\tif (squares[i+j].id === id){\r\n\t\t\t\t\tcount += 1;\r\n\t\t\t\tif (count >= 4){return true;}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcount = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tconst graveWin = (id) => {\r\n\t\tvar i;\r\n\t\tvar j;\r\n\t\tvar count;\r\n\t\tconsole.log(id);\r\n\t\tfor (i = 0; i < 3; i++){\r\n\t\t\tcount = 0;\r\n\t\t\tfor (j = 0; j < 33; j+=8){\r\n\t\t\t\tif (squares[i+j].id === id){\r\n\t\t\t\t\tcount += 1;\r\n\t\t\t\tif (count >= 4){return true;}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcount = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (i = 3; i < 8; i+=4){\r\n\t\t\tcount = 0;\r\n\t\t\tfor (j = 0; j < 25; j+=8){\r\n\t\t\t\tif (squares[i+j].id === id){\r\n\t\t\t\t\tcount += 1;\r\n\t\t\t\tif (count >= 4){return true;}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcount = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\tif (vertWin(\"blue\") || horWin(\"blue\") || aiguWin(\"blue\") || graveWin(\"blue\")){\r\n\t\t\tendGame(true);\r\n\t\t} else if (vertWin(\"red\") || horWin(\"red\") || aiguWin(\"red\") || graveWin(\"red\")){\r\n\t\t\tendGame(true);\r\n\t\t}\r\n\t}, [squares]);\r\n\t\r\n\t\r\n\t\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<Header />\r\n\t\t\t<Board squares = {squares} blueTurn = {blueTurn} onAdd = {addTile} gameOver={gameOver} />\r\n\t\t\t<Turn blueTurn = {blueTurn} gameOver = {gameOver} moveCount={moveCount}/>\r\n\t\t\t<New gameOver = {gameOver} moveCount={moveCount} newGame={newGame} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n "]},"metadata":{},"sourceType":"module"}