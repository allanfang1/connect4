{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\tracker\\\\tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Board from './components/Board';\nimport Turn from './components/Turn';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [blueTurn, changeTurn] = useState(true);\n  const [gameOver, endGame] = useState(false);\n  const [moveCount, stepUp] = useState(0);\n  const [squares, setSquares] = useState([{\n    row: 0,\n    column: 0,\n    id: \"gray\"\n  }, {\n    row: 0,\n    column: 1,\n    id: \"gray\"\n  }, {\n    row: 0,\n    column: 2,\n    id: \"gray\"\n  }, {\n    row: 0,\n    column: 3,\n    id: \"gray\"\n  }, {\n    row: 0,\n    column: 4,\n    id: \"gray\"\n  }, {\n    row: 0,\n    column: 5,\n    id: \"gray\"\n  }, {\n    row: 0,\n    column: 6,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 0,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 1,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 2,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 3,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 4,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 5,\n    id: \"gray\"\n  }, {\n    row: 1,\n    column: 6,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 0,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 1,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 2,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 3,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 4,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 5,\n    id: \"gray\"\n  }, {\n    row: 2,\n    column: 6,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 0,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 1,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 2,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 3,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 4,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 5,\n    id: \"gray\"\n  }, {\n    row: 3,\n    column: 6,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 0,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 1,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 2,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 3,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 4,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 5,\n    id: \"gray\"\n  }, {\n    row: 4,\n    column: 6,\n    id: \"gray\"\n  }]);\n\n  const addTile = (column, turn) => {\n    var i;\n    var added = false;\n    var newSquare = [];\n    var id = \"red\";\n    var nRow;\n\n    if (turn) {\n      id = \"blue\";\n    }\n\n    if (moveCount < 35) {\n      for (i = squares.length - 1; i >= 0; i--) {\n        if (added) {\n          newSquare.unshift(squares[i]);\n        } else if (squares[i].id === \"gray\" && squares[i].column === column) {\n          nRow = squares[i].row;\n          newSquare.unshift({\n            row: nRow,\n            column: column,\n            id: id\n          });\n          added = true;\n        } else {\n          newSquare.unshift(squares[i]);\n        }\n      }\n    }\n\n    setSquares(newSquare);\n\n    if (added) {\n      changeTurn(!blueTurn);\n      stepUp(prevState => prevState + 1);\n    }\n  };\n\n  useEffect(() => {\n    if (vertWin() || horWin() || aiguWin() || graveWin()) {\n      endGame(true);\n    }\n  }, [squares]);\n\n  const horWin = () => {\n    var i;\n    var id = \"blue\";\n\n    if (blueTurn) {\n      id = \"red\";\n    }\n\n    var count = 0;\n\n    for (i = 0; i < 35; i++) {\n      if (i % 7 === 0) {\n        count = 0;\n      }\n\n      if (squares[i].id === id) {\n        count += 1;\n\n        if (count >= 4) {\n          return true;\n        }\n      } else {\n        count = 0;\n      }\n    }\n\n    return false;\n  };\n\n  const vertWin = () => {\n    var i;\n    var j;\n    var id = \"blue\";\n\n    if (blueTurn) {\n      id = \"red\";\n    }\n\n    var count;\n\n    for (i = 0; i < 7; i++) {\n      count = 0;\n\n      for (j = 0; j < 29; j += 7) {\n        if (squares[i + j].id === id) {\n          count += 1;\n\n          if (count >= 4) {\n            return true;\n          }\n        } else {\n          count = 0;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  const aiguWin = () => {\n    var i;\n    var j;\n    var id = \"blue\";\n\n    if (blueTurn) {\n      id = \"red\";\n    }\n\n    var count;\n\n    for (i = 4; i < 7; i++) {\n      count = 0;\n\n      for (j = 0; j < 25; j += 6) {\n        if (squares[i + j].id === id) {\n          count += 1;\n\n          if (count >= 4) {\n            return true;\n          }\n        } else {\n          count = 0;\n        }\n      }\n    }\n\n    for (i = 3; i < 14; i += 10) {\n      count = 0;\n\n      for (j = 0; j < 19; j += 6) {\n        if (squares[i + j].id === id) {\n          count += 1;\n\n          if (count >= 4) {\n            return true;\n          }\n        } else {\n          count = 0;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  const graveWin = () => {\n    var i;\n    var j;\n    var id = \"blue\";\n\n    if (blueTurn) {\n      id = \"red\";\n    }\n\n    var count;\n\n    for (i = 0; i < 3; i++) {\n      count = 0;\n\n      for (j = 0; j < 33; j += 8) {\n        if (squares[i + j].id === id) {\n          count += 1;\n\n          if (count >= 4) {\n            return true;\n          }\n        } else {\n          count = 0;\n        }\n      }\n    }\n\n    for (i = 3; i < 8; i += 4) {\n      count = 0;\n\n      for (j = 0; j < 25; j += 8) {\n        if (squares[i + j].id === id) {\n          count += 1;\n\n          if (count >= 4) {\n            return true;\n          }\n        } else {\n          count = 0;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      squares: squares,\n      blueTurn: blueTurn,\n      onAdd: addTile,\n      gameOver: gameOver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Turn, {\n      blueTurn: blueTurn,\n      gameOver: gameOver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"A7x0mXkFFJt+AVPjNoUnLk6MnKY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Desktop/tracker/tracker/src/App.js"],"names":["Board","Turn","useState","useEffect","App","blueTurn","changeTurn","gameOver","endGame","moveCount","stepUp","squares","setSquares","row","column","id","addTile","turn","i","added","newSquare","nRow","length","unshift","prevState","vertWin","horWin","aiguWin","graveWin","count","j"],"mappings":"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","sourcesContent":["import Board from './components/Board'\nimport Turn from './components/Turn'\nimport { useState, useEffect } from 'react'\n\nfunction App() {\n\tconst [blueTurn, changeTurn] = useState(true)\n\tconst [gameOver, endGame] = useState(false)\n\tconst [moveCount, stepUp] = useState(0)\n\t\n\tconst [squares, setSquares] = useState([\n\t{\n\t\trow: 0,\n\t\tcolumn: 0,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 0,\n\t\tcolumn: 1,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 0,\n\t\tcolumn: 2,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 0,\n\t\tcolumn: 3,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 0,\n\t\tcolumn: 4,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 0,\n\t\tcolumn: 5,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 0,\n\t\tcolumn: 6,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 1,\n\t\tcolumn: 0,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 1,\n\t\tcolumn: 1,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 1,\n\t\tcolumn: 2,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 1,\n\t\tcolumn: 3,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 1,\n\t\tcolumn: 4,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 1,\n\t\tcolumn: 5,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 1,\n\t\tcolumn: 6,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 2,\n\t\tcolumn: 0,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 2,\n\t\tcolumn: 1,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 2,\n\t\tcolumn: 2,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 2,\n\t\tcolumn: 3,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 2,\n\t\tcolumn: 4,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 2,\n\t\tcolumn: 5,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 2,\n\t\tcolumn: 6,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 3,\n\t\tcolumn: 0,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 3,\n\t\tcolumn: 1,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 3,\n\t\tcolumn: 2,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 3,\n\t\tcolumn: 3,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 3,\n\t\tcolumn: 4,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 3,\n\t\tcolumn: 5,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 3,\n\t\tcolumn: 6,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 4,\n\t\tcolumn: 0,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 4,\n\t\tcolumn: 1,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 4,\n\t\tcolumn: 2,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 4,\n\t\tcolumn: 3,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 4,\n\t\tcolumn: 4,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 4,\n\t\tcolumn: 5,\n\t\tid: \"gray\",\n\t},{\n\t\trow: 4,\n\t\tcolumn: 6,\n\t\tid: \"gray\",\n\t},\n\t])\n\t\n\tconst addTile = (column, turn) => {\n\t\tvar i;\n\t\tvar added = false;\n\t\tvar newSquare = [];\n\t\tvar id = \"red\";\n\t\tvar nRow;\n\t\tif (turn){id = \"blue\";}\n\t\tif (moveCount < 35){\n\t\t\tfor (i = squares.length-1; i >= 0; i--){\n\t\t\t\tif (added){\n\t\t\t\t\tnewSquare.unshift(squares[i]);\n\t\t\t\t} else if (squares[i].id === \"gray\" && squares[i].column === column){\n\t\t\t\t\tnRow = squares[i].row;\n\t\t\t\t\tnewSquare.unshift({row: nRow, column: column, id: id});\n\t\t\t\t\tadded = true;\n\t\t\t\t} else {\n\t\t\t\t\tnewSquare.unshift(squares[i]);\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t}\n\t\tsetSquares(newSquare);\n\t\tif (added){\n\t\t\tchangeTurn(!blueTurn);\n\t\t\tstepUp(prevState => prevState + 1);\n\t\t}\n\t}\n\t\n\tuseEffect(() => {\n\t\tif (vertWin() || horWin() || aiguWin() || graveWin()){\n\t\t\tendGame(true);\n\t\t}\n\t}, [squares]);\n\t\n\tconst horWin = () => {\n\t\tvar i;\n\t\tvar id = \"blue\";\n\t\tif (blueTurn) { id = \"red\";}\n\t\tvar count = 0;\n\t\tfor (i = 0; i < 35; i++ ){\n\t\t\tif (i%7 === 0){ count = 0;}\n\t\t\tif (squares[i].id === id){\n\t\t\t\tcount += 1;\n\t\t\t\tif (count >= 4){return true;}\n\t\t\t} else {\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\t\n\tconst vertWin = () => {\n\t\tvar i;\n\t\tvar j;\n\t\tvar id = \"blue\";\n\t\tif (blueTurn) { id = \"red\";}\n\t\tvar count;\n\t\tfor (i = 0; i < 7; i++){\n\t\t\tcount = 0;\n\t\t\tfor (j = 0; j < 29; j+=7){\n\t\t\t\tif (squares[i+j].id === id){\n\t\t\t\t\tcount += 1;\n\t\t\t\tif (count >= 4){return true;}\n\t\t\t\t} else {\n\t\t\t\t\tcount = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tconst aiguWin = () => {\n\t\tvar i;\n\t\tvar j;\n\t\tvar id = \"blue\";\n\t\tif (blueTurn) { id = \"red\";}\n\t\tvar count;\n\t\tfor (i = 4; i < 7; i++){\n\t\t\tcount = 0;\n\t\t\tfor (j = 0; j < 25; j+=6){\n\t\t\t\tif (squares[i+j].id === id){\n\t\t\t\t\tcount += 1;\n\t\t\t\tif (count >= 4){return true;}\n\t\t\t\t} else {\n\t\t\t\t\tcount = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (i = 3; i < 14; i+=10){\n\t\t\tcount = 0;\n\t\t\tfor (j = 0; j < 19; j+=6){\n\t\t\t\tif (squares[i+j].id === id){\n\t\t\t\t\tcount += 1;\n\t\t\t\tif (count >= 4){return true;}\n\t\t\t\t} else {\n\t\t\t\t\tcount = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tconst graveWin = () => {\n\t\tvar i;\n\t\tvar j;\n\t\tvar id = \"blue\";\n\t\tif (blueTurn) { id = \"red\";}\n\t\tvar count;\n\t\tfor (i = 0; i < 3; i++){\n\t\t\tcount = 0;\n\t\t\tfor (j = 0; j < 33; j+=8){\n\t\t\t\tif (squares[i+j].id === id){\n\t\t\t\t\tcount += 1;\n\t\t\t\tif (count >= 4){return true;}\n\t\t\t\t} else {\n\t\t\t\t\tcount = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (i = 3; i < 8; i+=4){\n\t\t\tcount = 0;\n\t\t\tfor (j = 0; j < 25; j+=8){\n\t\t\t\tif (squares[i+j].id === id){\n\t\t\t\t\tcount += 1;\n\t\t\t\tif (count >= 4){return true;}\n\t\t\t\t} else {\n\t\t\t\t\tcount = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Board squares = {squares} blueTurn = {blueTurn} onAdd = {addTile} gameOver={gameOver} />\n\t\t\t<Turn blueTurn = {blueTurn} gameOver = {gameOver}/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n "]},"metadata":{},"sourceType":"module"}